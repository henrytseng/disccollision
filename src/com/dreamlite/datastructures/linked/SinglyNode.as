package com.dreamlite.datastructures.linked {	/**	 * A node for a singly linked list.  	 * 	 * @author henry	 */	public class SinglyNode {		internal var _next : SinglyNode;		internal var _data : *;				/**		 * Constructor		 */		public function SinglyNode($data:*) {			_data = $data;		}				/**		 * Internal function to insert a node after this node and remap references.  		 * @param $node node to insert		 */		internal function _insertAfter($node:SinglyNode):void {			// failure			if($node==null) return;						if(_next) $node._next = _next;			_next = $node;		}				/**		 * Internal function to remove node suceeding node and remap references.  		 * @return node removed		 */		 internal function _removeAfter():SinglyNode {		 	var node:SinglyNode = _next;		 	_next=node._next;		 	node._next = null;		 	return node;		 }				/**		 * Destroy		 */		public function destroy():void {			_next = null;			_data = null;		}				public function toString():String { return '[SinglyNode '+_data+']'; }	}}